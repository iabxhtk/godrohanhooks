#pragma once
#include "stdafx.h"

#include "Player.h"
#include "ByteBuffer.h"
#include <sstream>
#pragma pack(push,8)




enum _MAP_ITEM_PROTOCOL {
	RCM_MAP_COMPOSITION_ITEM = 0x1401,
	RCM_MAP_COMPOSITION_SETITEM = 0x1402,
	RCM_MAP_ENCHANTITEM_LEVEL = 0x1403,
	RCM_MAP_ENCHANTITEM_RANK = 0x1404,
	RCM_MAP_ENCHANTITEM_STRENGTH = 0x1405,
	RCM_MAP_ENCHANTITEM_DEXTERITY = 0x1406,
	RCM_MAP_ENCHANTITEM_INTELLIGENCE = 0x1407,
	RCM_MAP_USEPOTION_BROADCAST = 0x1408,
	RCM_MAP_USESCROLL_BROADCAST = 0x1409,
	RCM_MAP_USESKILLITEM = 0x140A,
	RCM_MAP_TRYMAGICBOX = 0x140B,
	RCM_MAP_TRYMAGICBOX_BROADCAST = 0x140C,
	RCM_MAP_OPENMAGICBOX = 0x140D,
	RCM_MAP_OPENMAGICBOX_BROADCAST = 0x140E,
	RCM_MAP_CLOSEMAGICBOX = 0x140F,
	RCM_MAP_CLOSEMAGICBOX_BROADCAST = 0x1410,
	RCM_MAP_GETMAGICBOXITEM = 0x1411,
	RCM_MAP_GETMAGICBOXITEM_ALL = 0x1412,
	RCM_MAP_USEPOTION_1 = 0x1413,
	RCM_MAP_USESCROLL_1 = 0x1414,
	RCM_MAP_USEDEED_1 = 0x1415,
	RCM_MAP_COMBINATION_INITITEM = 0x1416,
	RCM_MAP_USEINITSTATUS = 0x1417,
	RCM_MAP_USEINITSKILL = 0x1418,
	RCM_MAP_ALERT_EVENTITEM = 0x1419,
	RCM_MAP_GETEVENTITEMLIST = 0x141A,
	RCM_MAP_GETEVENTITEM = 0x141B,
	RCM_MAP_USETRANSJOB = 0x141C,
	RCM_MAP_ITEM_UPGRADE = 0x141D,
	RCM_MAP_USEAUTOCONFIRM = 0x141E,
	RCM_MAP_REQUESTAUTOCONFIRM = 0x141F,
	RCM_MAP_RESPONSEAUTOCONFIRM = 0x1420,
	RCM_MAP_USEFIRECRACKER = 0x1421,
	RCM_MAP_USEFIRECRACKER_BROADCAST = 0x1422,
	RCM_MAP_COMPOSITION_SHIELD = 0x1423,
	RCM_MAP_ALERT_MALLITEM = 0x1424,
	RCM_MAP_GETMALLITEMLIST = 0x1425,
	RCM_MAP_GETMALLITEM = 0x1426,
	RCM_MAP_COMPOSITION_ITEM_1 = 0x1427,
	RCM_MAP_COMPOSITION_SETITEM_1 = 0x1428,
	RCM_MAP_ITEM_UPGRADE_1 = 0x1429,
	RCM_MAP_COMPOSITION_SHIELD_1 = 0x142A,
	RCM_MAP_REQUESTAUTOCONFIRM_1 = 0x142B,
	RCM_MAP_USEAUTOCONFIRM_BROADCAST = 0x142C,
	RCM_MAP_MALL_ITEM_TIMER_SYNC = 0x142D,
	RCM_MAP_ENCHANTITEM_1 = 0x142E,
	RCM_MAP_ENCHANTITEM_RANK_1 = 0x142F,
	RCM_MAP_ENCHANTITEM_STRENGTH_1 = 0x1430,
	RCM_MAP_ENCHANTITEM_DEXTERITY_1 = 0x1431,
	RCM_MAP_ENCHANTITEM_INTELLIGENCE_1 = 0x1432,
	RCM_MAP_MALL_USE_INITSTATUS = 0x1433,
	RCM_MAP_MALL_USE_INITSKILL = 0x1434,
	RCM_MAP_MALL_USE_TELEPORT_TO_PARTY_MEMBER = 0x1435,
	RCM_MAP_SEALITEM_RELEASE = 0x1436,
	RCM_MAP_SEALITEM_RELEASE_ALL = 0x1437,
	RCM_MAP_USE_SKILLSCROLL = 0x1438,
	RCM_MAP_EXCHANGE_LUCKYBAG = 0x1439,
	RCM_MAP_USE_GUILDPOINTITEM = 0x143A,
	RCM_MAP_COMPOSITION_ITEM_CONSER = 0x143B,
	RCM_MAP_COMPOSITION_SETITEM_CONSER = 0x143C,
	RCM_MAP_ITEM_UPGRADE_CONSER = 0x143D,
	RCM_MAP_COMPOSITION_SHIELD_CONSER = 0x143E,
	RCM_MAP_USE_MAGIC_SCROLLITEM = 0x143F,
	RCM_MAP_COMPOSITION_POTION_2 = 0x1440,
	RCM_MAP_ITEM_LIMIT_ENCHANT = 0x1441,
	RCM_MAP_TRADE_SECONDASCENTSKILLSTONE = 0x1442,
	RCM_MAP_AUTOCONFIRM_KILLCOUNT = 0x1443,
	RCM_MAP_MALL_BANKTAB_EXTEND = 0x1444,
	RCM_MAP_ITEMINFO4CHATITEMLINK = 0x1445,
	RCM_MAP_USE_MARRIAGERING = 0x1446,
	RCM_MAP_GETMALLITEMLIST_EX = 0x1447,
	RCM_MAP_BANKTICKET_GET_INFO = 0x1448,
	RCM_MAP_BANKTICKET_GET_INFO_RTM = 0x1449,
	RCM_MAP_TELEPORT_TO_PRIVATESHOP = 0x144A,
	RCM_MAP_STEAL_ITEM = 0x144B,
	RCM_MAP_ROBBED_ITEM = 0x144C,
	RCM_MAP_COMPOSITION_OPTIONITEM = 0x144D,
	RCM_MAP_EXCHANGEMALL_GETITEM = 0x144E,
	RCM_MAP_EXCHANGEMALL_ALERT = 0x144F,
	RCM_MAP_EXCHANGEMALL_ITEMLIST = 0x1450,
	RCM_MAP_EXCHANGEMALL_SENDTOMARKET = 0x1451,
	RCM_MAP_BREAK_SEALED_CHARMITEM = 0x1452,
	RCM_MAP_REINFORCE_ANCIENT_ITEM = 0x1453,
	RCM_MAP_BUFFITEM_ADAPTING_MSG = 0x1454,
	RCM_MAP_PUT_SOCKET = 0x1455,
	RCM_MAP_REMOVE_SOCKET = 0x1456,
	RCM_MAP_GETEVENTITEMLIST_EX = 0x1457,
	RCM_MAP_OWNER_CLEAR_ITEM = 0x1458,
	RCM_MAP_USE_DC_ITEM = 0x1459,
	RCM_MAP_GET_ITEM_IN_BASKET = 0x145A,
	RCM_MAP_MALL_BANKTAB_COUPON = 0x145B,
	RCM_MAP_ITEM_DURABILITY_UPDATE = 0x145C,
	RCM_MAP_ITEM_REPAIR = 0x145D,
	RCM_MAP_ITEM_DURABILITY_APPLY = 0x145E,
	RCM_MAP_REMOVE_INVALID_ITEMS = 0x145F,
	RCM_MAP_GET_REWARD_INVEN = 0x1460,
	RCM_MAP_GET_PK_INVEN = 0x1461,
	RCM_MAP_GET_PK_RANK = 0x1462,
	RCM_MAP_MOVEITEM_REWARDTOINVEN = 0x1463,
	RCM_MAP_GET_HONOR_PVP_POINT = 0x1464,
	RCM_MAP_ACQUIRE_REWARDITEM = 0x1465,
	RCM_MAP_MOVEITEM_PKTOINVEN = 0x1466,
	RCM_MAP_ITEM_REUSE_SYSTEM = 0x1467,
	RCM_MAP_GET_REWARD_INVEN_BYLIST = 0x1468,
	RCM_MAP_GET_PK_INVEN_BYLIST = 0x1469,
	RCM_MAP_GET_PK_CRON = 0x146A,
	RCM_MAP_ACQUIRE_REWARDCRON = 0x146B,
	RCM_MAP_ITEM_REUSE_SYSTEM_TWO = 0x146C,
	RCM_MAP_TELEPORT_SCROLL = 0x146D,
	RCM_MAP_GETSCROLLSKILL = 0x146E,
	RCM_MAP_MALL_COSTUMEBANKTAB_EXTEND = 0x146F,
	RCM_MAP_MALL_COSTUMEBANKTAB_COUPON = 0x1470,
	RCM_MAP_ERASEITEM_INFO = 0x1471,
	RCM_MAP_SAFETY_REINFORCE = 0x1472,
};

class CMapConnection : public RohanConnection
{
public:
	_RTL_CRITICAL_SECTION  * GetCriticalSection()
	{
		return (_RTL_CRITICAL_SECTION*)((char*)this + 0x00000574);
	}

	int GetBillLogin()
	{
		return *(int*)((char*)this + 0x00000564);
	}
	void SetBillLogin(int val)
	{
		*(int*)((char*)this + 0x00000564) = val;
	}
	int GetUserId()
	{
		return *(int*)((char*)this + 0x000004F0);
	}
	CPlayer * GetPlayer()
	{
		return (CPlayer*)*(int*)((char*)this + 0x0534);
	}
	int OnBuyItemFromNpc2(_tagRequestMAP_BUYITEMFROMNPC_2 *prcreq)
	{
		int(__thiscall *OnBuyItemFromNpc2)(void*, _tagRequestMAP_BUYITEMFROMNPC_2*) = (int(__thiscall*)(void*, _tagRequestMAP_BUYITEMFROMNPC_2*))0x00421CF0; //(0x0041F320) 0x00421CF0
		return OnBuyItemFromNpc2(this, prcreq);
	}
	static void SystemShutdown(UINT nSDType);
	static CMapConnection * GetUserConnection(unsigned int dwUserId)
	{
		auto GetUserConnection = (CMapConnection *(__cdecl*)(unsigned int dwUserId))0x0041EF70; //(0x0041C760) 0x0041EF70
		return GetUserConnection(dwUserId);
	}
	bool HandleCommand(_tagGOPacket * packet);
};





#pragma pack(pop)
void CMapConnectionHooks(HMODULE hModule);